name: Reusable - Auto Add Reviewers

on:
  workflow_call:
    inputs:
      required_reviewers:
        description: 'Lista de reviewers obrigat√≥rios (separados por v√≠rgula)'
        required: true
        type: string

permissions:
  pull-requests: write
  issues: write

jobs:
  add-reviewers:
    name: üë• Adicionar Reviewers
    runs-on: ubuntu-24.04
    steps:
    - name: Adicionar reviewers automaticamente ao PR
      uses: actions/github-script@v7
      with:
        script: |
          const reviewersList = '${{ inputs.required_reviewers }}'.split(',')
            .map(u => u.trim());

          const pr = context.payload.pull_request;
          if (!pr) {
            core.setFailed('N√£o foi poss√≠vel identificar o PR.');
            return;
          }

          const { owner, repo } = context.repo;
          const prNumber = pr.number;
          const prAuthor = pr.user.login;

          core.info(`üìã Processando PR #${prNumber} criado por @${prAuthor}`);

          // Remove o autor do PR da lista de reviewers (n√£o pode revisar pr√≥prio PR)
          const filteredReviewers = reviewersList.filter(reviewer => 
            reviewer.toLowerCase() !== prAuthor.toLowerCase()
          );

          if (filteredReviewers.length === 0) {
            core.notice('‚ÑπÔ∏è Nenhum reviewer para adicionar - o autor do PR √© o √∫nico usu√°rio autorizado.');
            
            // Adiciona coment√°rio informativo
            await github.rest.issues.createComment({
              owner, repo, issue_number: prNumber,
              body: `## üë§ Autor √© Revisor\n\n**@${prAuthor}**, voc√™ √© o autor deste PR e tamb√©m est√° na lista de reviewers autorizados.\n\n‚ö†Ô∏è **Aten√ß√£o:** Voc√™ n√£o pode aprovar seu pr√≥prio PR. Solicite review de outro colaborador se poss√≠vel.\n\n---\n\n*üí° PRs precisam de aprova√ß√£o de outro usu√°rio para manter a qualidade do c√≥digo.*`
            });
            return;
          }

          try {
            core.info(`üë• Adicionando reviewers: ${filteredReviewers.join(', ')}`);

            // Adiciona os reviewers ao PR
            await github.rest.pulls.requestReviewers({
              owner,
              repo,
              pull_number: prNumber,
              reviewers: filteredReviewers
            });

            core.notice(`‚úÖ Reviewers adicionados com sucesso: @${filteredReviewers.join(', @')}`);
            core.notice(`üîî Notifica√ß√µes enviadas para os reviewers.`);

          } catch (error) {
            core.setFailed(`‚ùå Erro ao adicionar reviewers: ${error.message}`);
            
            // Tenta adicionar coment√°rio sobre o erro
            try {
              await github.rest.issues.createComment({
                owner, repo, issue_number: prNumber,
                body: `## ‚ö†Ô∏è Erro ao Adicionar Reviewers\n\nN√£o foi poss√≠vel adicionar os reviewers automaticamente.\n\n**Erro:** ${error.message}\n\n**A√ß√£o necess√°ria:** Por favor, adicione manualmente os reviewers: @${filteredReviewers.join(', @')}\n\n---\n\n*Este √© um problema t√©cnico tempor√°rio.*`
              });
            } catch (commentError) {
              core.warning(`N√£o foi poss√≠vel adicionar coment√°rio de erro: ${commentError.message}`);
            }
          }
